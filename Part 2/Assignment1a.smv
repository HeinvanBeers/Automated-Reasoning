MODULE main

VAR
truck : 0..300;
storage_a: 0..120;
storage_b: 0..120;
storage_c: 0..200;
position: {s, a, b, c};
time: 0..37;
delivered: 0..200;

INIT
storage_a = 40 & storage_b = 30 & storage_c = 145 & position = s;

ASSIGN
    next(position) :=
        case 
            position = s: {a, b};
            position = a: {s, b, c};
            position = b: {s, a, c};
            position = c: {a, b};
            TRUE: position;
        esac;

    next(time) :=
        case
            position = a & next(position) = b: 17;
            position = a & next(position) = c: 32;
            position = a & next(position) = s: 29;
            position = b & next(position) = a: 17;
            position = b & next(position) = c: 37;
            position = b & next(position) = s: 21;
            position = c & next(position) = a: 32;
            position = c & next(position) = b: 37;
            position = s & next(position) = a: 29;
            position = s & next(position) = b: 21;
            TRUE: time;
        esac;

    next(delivered) :=
        case
            next(position) = a & truck < (120 - storage_a + next(time)): truck;
            next(position) = b & truck < (120 - storage_b + next(time)): truck;
            next(position) = c & truck < (200 - storage_c + next(time)): truck;
            next(position) = a: 120 - storage_a + next(time);
            next(position) = b: 120 - storage_b + next(time);
            next(position) = c: 200 - storage_c + next(time);
            TRUE: 0;
        esac;

    next(storage_a) :=
        case
            next(position) = a & storage_a + next(delivered) <= 120 : storage_a + next(delivered) - next(time);
            next(position) = b : storage_a - next(time);
            next(position) = c : storage_a - next(time);
            next(position) = s : storage_a - next(time);
            TRUE: storage_a;
        esac;

    next(storage_b) :=
        case
            next(position) = b: storage_b + next(delivered) - next(time);
            TRUE: storage_b - next(time);
        esac;

    next(storage_c) :=
        case
            next(position) = c: storage_c + next(delivered) - next(time);
            TRUE: storage_c - next(time);
        esac; 


LTLSPEC G (storage_a >= 0 & storage_b >= 0 & storage_c >= 0)