Language options
----------------
op(450, infix, @).
op(410, prefix_paren, inv).

Assumptions
-----------

x @ (y @ z) = (x @ y) @ z.
x @ I = x.
x @ inv(x) = I.

Proofs
------
1. I @ x = x.

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 1 at 0.00 (+ 0.00) seconds.
% Length of proof is 12.
% Level of proof is 6.
% Maximum clause weight is 11.000.
% Given clauses 8.


1 I @ x = x # label(non_clause) # label(goal).  [goal].
2 x @ (y @ z) = (x @ y) @ z.  [assumption].
3 (x @ y) @ z = x @ (y @ z).  [copy(2),flip(a)].
4 x @ I = x.  [assumption].
5 x @ inv(x) = I.  [assumption].
6 I @ c1 != c1.  [deny(1)].
7 x @ (I @ y) = x @ y.  [para(4(a,1),3(a,1,1)),flip(a)].
8 x @ (inv(x) @ y) = I @ y.  [para(5(a,1),3(a,1,1)),flip(a)].
13 I @ inv(inv(x)) = x.  [para(5(a,1),8(a,1,2)),rewrite([4(2)]),flip(a)].
15 x @ inv(inv(y)) = x @ y.  [para(13(a,1),3(a,2,2)),rewrite([4(2)])].
16 I @ x = x.  [para(13(a,1),7(a,2)),rewrite([15(5),7(4)])].
17 $F.  [resolve(16,a,6,a)].

============================== end of proof ==========================

2. inv(inv(x)).

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 14.
% Level of proof is 8.
% Maximum clause weight is 11.000.
% Given clauses 12.


1 inv (inv x) = x # label(non_clause) # label(goal).  [goal].
2 x @ (y @ z) = (x @ y) @ z.  [assumption].
3 (x @ y) @ z = x @ (y @ z).  [copy(2),flip(a)].
4 x @ I = x.  [assumption].
5 x @ inv x = I.  [assumption].
6 inv (inv c1) != c1.  [deny(1)].
7 x @ (I @ y) = x @ y.  [para(4(a,1),3(a,1,1)),flip(a)].
8 x @ (inv x @ y) = I @ y.  [para(5(a,1),3(a,1,1)),flip(a)].
13 I @ inv (inv x) = x.  [para(5(a,1),8(a,1,2)),rewrite([4(2)]),flip(a)].
15 x @ inv (inv y) = x @ y.  [para(13(a,1),3(a,2,2)),rewrite([4(2)])].
16 I @ x = x.  [para(13(a,1),7(a,2)),rewrite([15(5),7(4)])].
19 x @ (inv x @ y) = y.  [back_rewrite(8),rewrite([16(5)])].
22 inv (inv x) = x.  [para(5(a,1),19(a,1,2)),rewrite([4(2)]),flip(a)].
23 $F.  [resolve(22,a,6,a)].

============================== end of proof ==========================

3. x @ inv(x) = I.

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 1 at 0.00 (+ 0.00) seconds.
% Length of proof is 15.
% Level of proof is 9.
% Maximum clause weight is 11.000.
% Given clauses 13.


1 inv x @ x = I # label(non_clause) # label(goal).  [goal].
2 x @ (y @ z) = (x @ y) @ z.  [assumption].
3 (x @ y) @ z = x @ (y @ z).  [copy(2),flip(a)].
4 x @ I = x.  [assumption].
5 x @ inv x = I.  [assumption].
6 inv c1 @ c1 != I.  [deny(1)].
7 x @ (I @ y) = x @ y.  [para(4(a,1),3(a,1,1)),flip(a)].
8 x @ (inv x @ y) = I @ y.  [para(5(a,1),3(a,1,1)),flip(a)].
13 I @ inv (inv x) = x.  [para(5(a,1),8(a,1,2)),rewrite([4(2)]),flip(a)].
15 x @ inv (inv y) = x @ y.  [para(13(a,1),3(a,2,2)),rewrite([4(2)])].
16 I @ x = x.  [para(13(a,1),7(a,2)),rewrite([15(5),7(4)])].
19 x @ (inv x @ y) = y.  [back_rewrite(8),rewrite([16(5)])].
22 inv (inv x) = x.  [para(5(a,1),19(a,1,2)),rewrite([4(2)]),flip(a)].
24 inv x @ x = I.  [para(22(a,1),5(a,1,2))].
25 $F.  [resolve(24,a,6,a)].

============================== end of proof ==========================

4. I @ x = x.

============================ COUNTEREXAMPLE ==========================

interpretation( 6, [number = 1,seconds = 0], [
    function(@(_,_), [
        0,1,2,3,4,5,
        1,0,3,2,5,4,
        2,4,0,5,1,3,
        3,5,1,4,0,2,
        4,2,5,0,3,1,
        5,3,4,1,2,0]),
    function(I, [0]),
    function(c1, [1]),
    function(c2, [2]),
    function(inv(_), [0,1,2,4,3,5])]).
======================================================================